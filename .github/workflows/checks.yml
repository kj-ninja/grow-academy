name: Grow Academy CI/CD

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      DATABASE_URL: ${{ secrets.DATABASE_URL || 'postgresql://postgres:postgres@localhost:5432/grow_academy_test' }}

    services:
      # Add PostgreSQL service for server tests
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: grow_academy_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.1.32

      - name: Install root dependencies
        run: bun install

      - name: Install server dependencies
        run: cd server && bun install

      - name: Install client dependencies
        run: cd client && bun install

      - name: Code formatting check
        run: bun run format:check

      - name: Lint server
        run: cd server && bun run lint

      - name: Lint client
        run: cd client && bun run lint

      - name: Type check server
        run: cd server && bun run check-types

      - name: Type check client
        run: cd client && bun run check-types

      - name: Set up Prisma
        run: |
          cd server
          bunx prisma generate
          bunx prisma migrate deploy
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}

      - name: Run server tests
        run: cd server && bun run test
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}

      - name: Run client tests
        run: cd client && bun run test

      - name: Build client
        run: cd client && bun run build

  # Optional deployment job - only runs on master/main branch
  deploy:
    needs: quality-checks
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.1.32

      - name: Install dependencies
        run: |
          cd server && bun install
          cd ../client && bun install

      - name: Build client
        run: cd client && bun run build

      # Add your deployment steps here
      # For example, deploying to render.com, vercel, or AWS
      - name: Deploy to production
        run: echo "Add your deployment commands here"
