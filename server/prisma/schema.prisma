// This is your Prisma schema file,

// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                Int                 @id @default(autoincrement())
  username          String              @unique
  password          String
  role              String              @default("user")
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  firstName         String?
  lastName          String?
  bio               String?
  avatarImage       Bytes?
  backgroundImage   Bytes?
  isActive          Boolean             @default(false)
  classrooms        ClassroomsMembers[]
  ownedClassrooms   Classroom[]
  uploadedResources Resource[]
  streamToken       String              @default("streamTokenDefault")
}

model ClassroomsMembers {
  classroom        Classroom @relation(fields: [classroomId], references: [id])
  classroomId      Int
  user             User      @relation(fields: [userId], references: [id])
  userId           Int
  role             String    @default("member")
  memberShipStatus String    @default("pending")

  @@id([userId, classroomId])
  @@index([classroomId])
  @@index([userId])
}

model Classroom {
  id                 Int                 @id @default(autoincrement())
  classroomName      String
  handle             String              @unique
  description        String?
  accessType         String              @default("Public")
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  owner              User                @relation(fields: [ownerId], references: [id])
  ownerId            Int
  members            ClassroomsMembers[]
  avatarImage        Bytes?
  backgroundImage    Bytes?
  getStreamChannelId String?
  isLive             Boolean             @default(false)
  resources          Resource[]
  tags               String?
}

model Resource {
  id           Int       @id @default(autoincrement())
  fileName     String
  fileType     String
  fileData     Bytes
  uploadedAt   DateTime  @default(now())
  uploadedBy   User      @relation(fields: [uploadedById], references: [id])
  uploadedById Int
  classroom    Classroom @relation(fields: [classroomId], references: [id])
  classroomId  Int
}
